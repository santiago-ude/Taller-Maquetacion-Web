CURSO MAQUETACION HTML-CSS-JS-ANGULAR

HTML:
Sin HTML no hay pagina web
Sin html--> no hay que maquetar

HTML: hyperText markup language (lenguaje de marcas de hipertexto)

~Arbol de etiquetas:
~Es un lenguaje, no es un lenguaje de programacion
~Pertenece al paradigma declarativo

ETIQUETAS DE ESTRUCTURA

<aside>: contenido relacionado al principal
<nav>: (de lo mas importante) menu de navegacion
<header>: encabezado del sitio o elemento
<main>: contenido principal, es lo que va a indexar google
<section> y <article>: contenido secundario
<footer>: pie de pagina
<div>: contenedor generico

<meta charset="UTF-8">
~tiene un atributo (charset)

--------------------------------<head>--------------------------------------

    ~Metadatos:
    ~El 95% de los sitios web usan "UTF-8" <meta charset="UTF-8">~

    ~Responsive:
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    ~SEO:
    <meta name="description" content="Descripcion de la pagina">
    <meta name="keywords" content="HTML-CSS-JS-ANGULAR">

    <meta name="author" content="Gabriel Chaldu">


    ~Title
    <title>Mi primera pagina</title>: titulo de la pagina

    ~Estilos:
    <link rel="stylesheet" href="style.css">

    ~JS
    <script src="js"></script>

    ~Recursos externos:
    <link rel="stylesheet" href="tipografia de google">

    ~Icon page

    <link rel="icon" href="link de icono">

--------------------------------<body>--------------------------------------

    ~contenido visible de la pagina web
    .texto
    .imagenes
    .videos, enlaces(botones)
    .formularios(contacto, registro, carga,etc)
    .otros elementos interactivos

<p>: parrafo
<strong>: negrita
<em>: enfasis, cursiva creo

    ~mayor numero menor imporancia...

<h1>: Titulo principal (mas importante) -SOLO 1 POR PAGINA-
<h2>: Menor importancia que el h1
<h3>:Menor importancia que el h2
...hasta el 6

IMG:
<img src="linkImagen" alt="Lindo gatito">
<a href=""></a>

[
EXTENSIONES:

~AUTO RENAME TAG
~AUTO CLOSE TAG
~LIVE SERVER
~VSCODE ICONS
]

MULTIMEDIA:

<figure>: encapsular una imagen con una descripcion
<figure>
    <img src="linkImagen" alt="Lindo gatito">
<figcaption>Descripcion de la imagen</figcaption>

</figure>

INPUTS:

<input type="text">
muchos tipos...
text,number,password,etc

FORM
SIEMPRE hay que usar un label

<form action="">

    <input type="text">

<input type="password">
</form>

BUTTON
<button>enviar</button>
<input type="button">

ETIQUETAS BASICAS HTLM

~label:
~for: asociar un input con algo (nombre por ejemplo)
~placeholder:

pre: deja el contenido tal cual esta escrito el formato
<pre>

<code>

    function(nombre, apellido){

console.log(`Hola ${nombre,apellido} como estas?`);
</code>

</pre>


LISTAS:

ul : listas punteada y li cada posicion
ol : lista numerica y li cada posicion




/----------------------CSS----------------------------/


Es un lenguaje de hojas de estilo utilizado para CONTROLAR la presentacion y el disenio visual de documentos HTML y XML en una pagina web

-Colores
-Fuentes
-Margenes
-Espaciado
-Tamanios de texto
-Efectos Visuales
-etc



//--//--//--//--SINTAXIS//--//--//--//

p{ --> (selector)

(atributo)         (valor)
background-color: grey;
color:blue;
etc...

}

SELECTOR:
cada selector tiene una especificidad o prioridad o peso.


seleccionar selector

class = .nombreClase
id = #id ES UNICO EN TODA LA PAGINA HTML (si queres repetir usa otro selector)
div h1: todos los div que tengan dentro un h1




//--//--//--//--UNIDADES//--//--//--//

MEDIDAS ABSOLUTAS: siempre van a medir lo mismo
-px
-cm
-mm
-s
TAMANIO FIJO

MEDIDAS RELATIVAS: se apoyan en otra cosa
-%
-En fuentes 1rem === 10px






-PADDING
-MARGIN
-WIDTH = ANCHO
-HEIGHT = ALTO


//--//--//--//--MARGIN//--//--//--//
margen para afuera

margin: 20px (todo los lados 20px)
margin: 20px 20px (el primero para arriba y abajo y el segundo para derecha e izquierda)
margin: 10px 20px 30px 40px(10px top, 20px right, 30px bottom, 40px left)

margin: 0 auto; CENTRA ELEMENTOS

Funciona cuando...
-El elemento es tipo block



//--//--//--//--PADDING//--//--//--//
relleno interno margenes para adentro

padding: 20px (todo los lados 20px)
padding: 20px 20px (el primero para arriba y abajo y el segundo para derecha e izquierda)
padding: 10px 20px 30px 40px(10px top, 20px right, 30px bottom, 40px left)

//--//--//--//--COLORES//--//--//--//

-Hexadecimal, RGB,HSL

RGBA(red, green,brown,alpha)
Hue.tools (paginas de colores)



//--//--//--//--REGLA IMPORTANTE//--//--//--//

html{

    box-sizing:
}

//--//--//--//--:root//--//--//--//

:root{

--color-primario: blue;
--color-secundario: green;
--color-terceario: black;

}

declara variables basicamente

//--//--//--//--POSITION//--//--//--//
Permite contolar como se va a posicionar la etiqueta en relacion a otros elementos secundarios y el flujo normal del documento
Siempre que usamos position podemos afectar a 
-Top
-right
-bottom
-left

<<<Static>>>:
-valor predeterminado para todas las etiquetas
-Se colocan en el flujo normal del documento.
-No se usa top,right,bottom y left.
-Todo es static hasta que digamos lo contrario

<<<fixed>>> (fijo):
-Fijo, se supermone (screnshot)
-se puede usar top, left...etc


...
-Se posiciona en relacion con la ventana del navegador
-Permanece en la misma posicion incluso cuando se desplaza la pagina
-util para crear barras de navegacion
-se puede usar top, left...etc

<<<Absolut>>>:
-Normalmente se usa con relative))
-Es absoluto, no es fijo
-Se superpone, pero cumple el comportamiento del static
-
------------
CENTRADO
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%); //resta 50% del div en el eje x y en el eje y
------------

<<<Relative>>>:
-Normalmente se utilizan para los contenedores padres
-Se establece un contexto de posicionamiento para sus elementos hijos
-Se coloca en el flujo normal de documento
-se puede usar top, left...etc


<<<Sticky>>>:
-Mezcla de relative y fixed
-Queda pegado hasta que la section termina

------------
EFECTO QUE SE PISEN LOS ELEMENTOS

Los h1 tienen la clase "pepito"
.pepito{

position: sticky;
background-color: black;
color: white;
top: 0;
}


y ponerle section a cada h1 con sus p si se quiere que el efecto se pegue hasta que arranque la nueva section
------------



//---------------------------------------------------------------------------------------------------------------
FLEXBOX:
Modelo unidimensional
GRID--> matriz
FLEXBOX -->fila
Se utiliza para crear diseños y distribuir elementos en una pagina web (layouts)

flexbox--> EJES

ºpodes colocar o distribuir tus elementos en una direccion ya sea fila o columna

ºFila por default

Por defecto: row

ºrow o row-reverseº: los elementos hijos se colocaran uno al lado del otro.



Propiedad Gap--> le dio un espacio a los 3 cuadrados
Propiedad flex-Wrap -->genera una especie de responsividad




